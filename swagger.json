{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Billie Backend App",
    "description": "API application for Billie service delivery",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "billie-app-backend.herokuapp.com",
  "basePath": "/api/v2",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "authentication": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/users/create-user": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "user sign up",
        "parameters": [
          {
            "in": "body",
            "name": "signup",
            "description": "Endpoint to create a new user",
            "schema": {
              "$ref": "#/definitions/user-signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account created Successfully"
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "User login",
        "parameters": [
          {
            "in": "body",
            "name": "signin",
            "description": "Sign In Payload",
            "schema": {
              "$ref": "#/definitions/user-login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          }
        }
      }
    },
    "/users/get/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to get",
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "User Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve user with given ID",
        "responses": {
          "200": {
            "description": "User info retrieved successfully",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/users/get/": {
      "get": {
        "tags": [
          "User Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve all users",
        "responses": {
          "200": {
            "description": "All users retrieved successfully",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/users/edit/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to edit",
          "type": "integer"
        },
        {
          "in": "body",
          "name": "edit",
          "description": "Edit user Payload",
          "schema": {
            "$ref": "#/definitions/user"
          }
        }
      ],
      "patch": {
        "tags": [
          "User Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update user with given ID",
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/users/profileimage/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to add profile image",
          "type": "integer"
        },
        {
          "in": "formData",
          "name": "image",
          "type": "file",
          "description": "Profile Image Payload"
        }
      ],
      "patch": {
        "tags": [
          "User Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update user profile image with given ID",
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/user/properties/profile_image"
            }
          }
        }
      }
    },
    "/users/delete/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to delete",
          "type": "integer"
        }
      ],
      "delete": {
        "tags": [
          "User Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete user of given ID",
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/vendors/create-vendor/": {
      "post": {
        "tags": [
          "Vendor Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Vendor sign up",
        "parameters": [
          {
            "in": "body",
            "name": "signup",
            "description": "Endpoint to create a new user",
            "schema": {
              "$ref": "#/definitions/vendor-signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account created Successfully"
          }
        }
      }
    },
    "/vendors/signin/": {
      "post": {
        "tags": [
          "Vendor Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Vendor sign in",
        "parameters": [
          {
            "in": "body",
            "name": "signin",
            "description": "Endpoint to signin vendor",
            "schema": {
              "$ref": "#/definitions/vendor-login"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Vendor logged in Successfully"
          }
        }
      }
    },
    "/vendors/get/{vendorId}": {
      "parameters": [
        {
          "name": "vendorId",
          "in": "path",
          "required": true,
          "description": "ID of vendor that we want to get",
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "Vendor Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve vendor with given ID",
        "responses": {
          "200": {
            "description": "User info retrieved successfully",
            "schema": {
              "$ref": "#/definitions/vendor"
            }
          }
        }
      }
    },
    "/vendors/get/": {
      "get": {
        "tags": [
          "Vendor Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve all vendors",
        "responses": {
          "200": {
            "description": "Vendors retrieved successfully",
            "schema": {
              "$ref": "#/definitions/vendor"
            }
          }
        }
      }
    },
    "/vendors/edit/{id}": {
      "parameters": [
        {
          "name": "vendorId",
          "in": "path",
          "required": true,
          "description": "ID of vendor that we want to edit",
          "type": "integer"
        },
        {
          "in": "body",
          "name": "edit",
          "description": "Edit user Payload",
          "schema": {
            "$ref": "#/definitions/vendor"
          }
        }
      ],
      "patch": {
        "tags": [
          "Vendor Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update vendor with given ID",
        "responses": {
          "200": {
            "description": "Vendor updated successfully",
            "schema": {
              "$ref": "#/definitions/vendor"
            }
          }
        }
      }
    },
    "/vendors/profileimage/{vendorId}": {
      "parameters": [
        {
          "name": "vendorId",
          "in": "path",
          "required": true,
          "description": "ID of vendor that we want to add profile image",
          "type": "integer"
        },
        {
          "in": "formData",
          "name": "image",
          "type": "file",
          "description": "Profile Image Payload"
        }
      ],
      "patch": {
        "tags": [
          "Vendor Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update user profile image with given ID",
        "responses": {
          "200": {
            "description": "Vendor updated successfully",
            "schema": {
              "$ref": "#/definitions/vendor/properties/profile_image"
            }
          }
        }
      }
    },
    "/vendors/delete/{vendorId}": {
      "parameters": [
        {
          "name": "vendorId",
          "in": "path",
          "required": true,
          "description": "ID of vendor that we want to delete",
          "type": "integer"
        }
      ],
      "delete": {
        "tags": [
          "Vendor Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete vendor of given ID",
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/products/create-products/": {
      "post": {
        "tags": [
          "Product CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Product create",
        "parameters": [
          {
            "in": "body",
            "name": "product_title",
            "description": "Product title",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "Profile Image Payload"
          },
          {
            "in": "body",
            "name": "price",
            "description": "Product price",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "description",
            "description": "Product description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "status",
            "description": "Product status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product/properties/status"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created Successfully",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        }
      }
    },
    "/products/get/{productid}": {
      "parameters": [
        {
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "ID of product that we want to get",
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "Product CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve product with given ID",
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        }
      }
    },
    "/products/get/": {
      "get": {
        "tags": [
          "Product CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve all products",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        }
      }
    },
    "/products/edit/{productid}": {
      "parameters": [
        {
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "ID of product that we want to get",
          "type": "integer"
        }
      ],
      "patch": {
        "tags": [
          "Product CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Product edit",
        "parameters": [
          {
            "in": "body",
            "name": "product_title",
            "description": "Product title",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "Profile Image Payload"
          },
          {
            "in": "body",
            "name": "price",
            "description": "Product price",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "description",
            "description": "Product description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "status",
            "description": "Product status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product/properties/status"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Edited product Successfully",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        }
      }
    },
    "/products/delete/{productid}": {
      "parameters": [
        {
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "ID of product that we want to delete",
          "type": "integer"
        }
      ],
      "delete": {
        "tags": [
          "Product CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete product of given ID",
        "responses": {
          "200": {
            "description": "Deleted product successfully",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        }
      }
    },
    "/products/vendor/{vendorid}": {
      "parameters": [
        {
          "name": "vendorId",
          "in": "path",
          "required": true,
          "description": "ID of vendor we want to get products from",
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "Product CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve products of given vendor",
        "responses": {
          "200": {
            "description": "Vendor product retrieved successfully",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        }
      }
    },
    "/cart/add/{userid}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user to add to cart",
          "type": "integer"
        },
        {
          "in": "body",
          "name": "productid",
          "description": "Id of product",
          "schema": {
            "$ref": "#/definitions/cart/properties/productid"
          }
        },
        {
          "in": "body",
          "name": "quantity",
          "description": "Quantity of product in cart",
          "schema": {
            "$ref": "#/definitions/cart/properties/quantity"
          }
        }
      ],
      "post": {
        "tags": [
          "Cart CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add to cart",
        "responses": {
          "201": {
            "description": "Successfully added to cart",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          }
        }
      }
    },
    "/cart/increase/{userid}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user in cart",
          "type": "integer"
        },
        {
          "in": "body",
          "name": "productid",
          "description": "Id of product to increase",
          "schema": {
            "$ref": "#/definitions/cart/properties/productid"
          }
        }
      ],
      "patch": {
        "tags": [
          "Cart CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Increase cart item quantity",
        "responses": {
          "201": {
            "description": "Quantity of product increased",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          }
        }
      }
    },
    "/cart/reduce/{userid}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user in cart",
          "type": "integer"
        },
        {
          "in": "body",
          "name": "productid",
          "description": "Id of product to reduce",
          "schema": {
            "$ref": "#/definitions/cart/properties/productid"
          }
        }
      ],
      "patch": {
        "tags": [
          "Cart CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Reduce cart item quantity",
        "responses": {
          "201": {
            "description": "Quantity of product reduced",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          }
        }
      }
    },
    "/cart/all/{userid}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user in cart",
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "Cart CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get all cart items",
        "responses": {
          "201": {
            "description": "All cart items",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          }
        }
      }
    },
    "/cart/delete/{userid}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user in cart",
          "type": "integer"
        },
        {
          "in": "body",
          "name": "productid",
          "description": "Id of product to remove",
          "schema": {
            "$ref": "#/definitions/cart/properties/productid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Cart CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete cart item",
        "responses": {
          "201": {
            "description": "Deleted",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          }
        }
      }
    },
    "/cart/clear/{userid}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user in cart",
          "type": "integer"
        }
      ],
      "delete": {
        "tags": [
          "Cart CRUD"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Clear cart of current user",
        "responses": {
          "201": {
            "description": "Cleared",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          }
        }
      }
    },
    "/orders/create/{userid}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user to add to orders",
          "type": "integer"
        },
        {
          "in": "body",
          "name": "address",
          "description": "Address to be delivered to",
          "schema": {
            "$ref": "#/definitions/orders/properties/address"
          }
        },
        {
          "in": "body",
          "name": "payment_method",
          "description": "How product will be paid",
          "schema": {
            "$ref": "#/definitions/orders/properties/payment_method"
          }
        },
        {
          "in": "body",
          "name": "phone_number",
          "description": "Phone number of order recepient",
          "schema": {
            "$ref": "#/definitions/orders/properties/phone_number"
          }
        }
      ],
      "post": {
        "tags": ["Orders CRUD"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "summary": "Add to cart",
        "responses": {
          "201": {
            "description": "Order created",
            "schema": {
              "$ref": "#/definitions/orders"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "userid": {
          "type": "integer",
          "uniqueItems": true,
          "readOnly": true
        },
        "name": {
          "type": "string",
          "uniqueItems": false
        },
        "username": {
          "type": "string",
          "uniqueItems": true,
          "readOnly": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "profile_image": {
          "type": "string",
          "readOnly": true
        },
        "last_edited": {
          "type": "string",
          "readOnly": true
        },
        "last_loggedin": {
          "type": "string",
          "readOnly": true
        },
        "phone_number": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "user-signup": {
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "name": {
          "type": "string",
          "uniqueItems": false
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "user-login": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "vendor": {
      "required": [
        "businessname",
        "vendortype",
        "address",
        "email",
        "password"
      ],
      "properties": {
        "vendorid": {
          "type": "integer"
        },
        "username": {
          "type": "string",
          "uniqueItems": true,
          "readOnly": true
        },
        "businessname": {
          "type": "string",
          "uniqueItems": true
        },
        "vendortype": {
          "type": "string",
          "enum": [
            "food",
            "drink",
            "beauty",
            "health"
          ]
        },
        "address": {
          "type": "string"
        },
        "profile_image": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "readOnly": true
        },
        "last_loggedin": {
          "type": "string",
          "readOnly": true
        },
        "last_edited": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "vendor-signup": {
      "required": [
        "businessname",
        "vendortype",
        "address",
        "email",
        "password"
      ],
      "properties": {
        "businessname": {
          "type": "string",
          "uniqueItems": true
        },
        "vendortype": {
          "type": "string",
          "enum": [
            "food",
            "drink",
            "beauty",
            "health"
          ],
          "uniqueItems": true
        },
        "address": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "vendor-login": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "product": {
      "required": [
        "product_title",
        "price",
        "description",
        "status",
        "image"
      ],
      "properties": {
        "productid": {
          "type": "integer",
          "readOnly": true
        },
        "vendorid": {
          "type": "integer",
          "readOnly": true
        },
        "businessname": {
          "type": "string",
          "uniqueItems": true,
          "readOnly": true
        },
        "product_title": {
          "type": "string",
          "uniqueItems": false
        },
        "displayimg": {
          "type": "string",
          "uniqueItems": false
        },
        "price": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "available",
            "unavailable"
          ]
        },
        "date_created": {
          "type": "string",
          "readOnly": true
        },
        "last_edited": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "cart": {
      "required": [
        "userid",
        "productid",
        "quantity"
      ],
      "properties": {
        "cartid": {
          "type": "integer",
          "readOnly": true
        },
        "userid": {
          "type": "integer",
          "readOnly": false
        },
        "productid": {
          "type": "integer",
          "readOnly": false
        },
        "product_title": {
          "type": "string",
          "readOnly": true
        },
        "displayimg": {
          "type": "string",
          "readOnly": true
        },
        "price": {
          "type": "integer",
          "readOnly": true
        },
        "quantity": {
          "type": "integer"
        },
        "subtotal": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "orders": {
      "required": ["address", "payment_method", "phone_number"],
      "properties": {
        "serial_no": {
          "type": "integer",
          "readOnly": true
        },
        "orderid": {
          "type": "string",
          "readOnly": false
        },
        "userid": {
          "type": "integer",
          "readOnly": false
        },
        "address": {
          "type": "string",
          "readOnly": false
        },
        "phone_number": {
          "type": "string",
          "readOnly": true
        },
        "shipping_cost": {
          "type": "integer",
          "readOnly": true
        },
        "total_cost": {
          "type": "integer",
          "readOnly": true
        },
        "payment_method": {
          "type": "string",
          "enum": ["prepaid","on_delivery"]
        },
        "ordersItems": {
          "properties": {
            "orderid": {
              "type": "string",
              "readOnly": true
            },
            "productid": {
              "type": "integer",
              "readOnly": true
            },
            "vendorid": {
              "type": "integer",
              "readOnly": true
            },
            "product_title": {
              "type": "string",
              "readOnly": true
            },
            "business_name": {
              "type": "string",
              "readOnly": true
            },
            "display_image": {
              "type": "string",
              "readOnly": true
            },
            "price": {
              "type": "integer",
              "readOnly": true
            },
            "quantity": {
              "type": "string",
              "readOnly": true
            },
            "sub_total": {
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    }
  }
}